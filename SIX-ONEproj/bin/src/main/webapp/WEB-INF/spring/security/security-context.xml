<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<security:http auto-config="true" use-expressions="true">
		<!-- iframe 관련 오류 발생시 -->
		<security:headers>
			<security:frame-options disabled="true"/>
		</security:headers>
		
		<!-- url 패턴에 따른 접근 권한 설정 : 접근범위가 좁은 범위를 위로 -->
		<!--  역할이 Role_ 를 미 지정시 자동으로 추가됨  ex)Role_USER -->
		<security:intercept-url pattern="/sixone/**" access="hasAnyRole('USER','ADMIN')"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
		
		<!-- form 기반 로그인 설정 -->
		<!-- login-page 사용자 정의 로그인 페이지-->
		<!-- default-target-url 로그인 후 보여줄 페이지  -->
		<!-- authentication-failure-url 로그인 실패시 보여줄 페이지 -->
		<!-- login-processing-url 로그인 처리 -->
		<!-- username-parameter 로그인 폼에 아이디로 등록한 파라미터 -->
		<!-- password-parameter 로그인 폼에 비밀번호로 등록한 파라미터 -->
		<security:form-login login-page="/Login.do" 
							 default-target-url="/Login.do"
							 authentication-failure-url="/Login.do"
							 login-processing-url="/Login.do"
							 username-parameter="id"
							 password-parameter="password"
							 />
		
							
		<!-- 로그아웃 설정 -->
		<!-- invalidate-session 세션에서 삭제 -->
		<!-- delete-cookies 쿠키삭제 -->
		<security:logout
			logout-url="/Logout.do"
			invalidate-session="true"
			delete-cookies="true"
			/>
		
		<!-- 중복 로그인 방지 -->
		<!-- invalid-session-url 세션이 끊어졌을 떄 이동할 url -->
		<!-- max-sessions 최대 허용하는 세션 수 -->
		<!-- expired-url 만기된 세션 (유효시간이 경과한 경우) -->
		<security:session-management invalid-session-url="/Login.do">
			<security:concurrency-control max-sessions="1" expired-url="/Login.do"/>
		</security:session-management>

		
		<!-- CSRF 공격 막기 -->
		<!-- 
			<security:csrf disabled="false"/> == 로 활성화시
			1. 모든 폼 입력에 hidden 태그 추가
			 <input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}"/>
			2. 로그아웃을 post 방식으로 구현
		 -->
		<security:csrf disabled="true"/>
		
	
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="datasource"
										users-by-username-query="SELECT m.id username, m.pwd password, enabled FROM member m JOIN auth_security au ON m.id = au.id WHERE m.id = ? "
										authorities-by-username-query="SELECT m.id username, authority FROM member m JOIN auth_security au ON m.id = au.id WHERE m.id = ? "
			/>
		
		</security:authentication-provider>
	
	
	
	</security:authentication-manager>
	
	
	
	
	
	
</beans>
